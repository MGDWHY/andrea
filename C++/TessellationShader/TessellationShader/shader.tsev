#version 420

uniform mat4 in_ProjectionMatrix;
uniform mat4 in_ModelViewMatrix;
uniform sampler2D in_HeightMap;

layout(triangles, fractional_odd_spacing, ccw) in;

in vec2 tcsTexCoord[];

patch in vec3 tcsSurfaceNormal;
patch in vec3 tcsSurfaceTangent;

out mat3 tesInverseTBN;
out vec3 tesPosition;
out vec2 tesTexCoord;

void main() {
	
	vec3 N = normalize(tcsSurfaceNormal);
	vec3 T = normalize(tcsSurfaceTangent);
	vec3 B = cross(N, T);
	
	mat3 invTBN = mat3(T, B, N);
	
	vec2 texCoord = gl_TessCoord.x * tcsTexCoord[0] +
		gl_TessCoord.y * tcsTexCoord[1] +
		gl_TessCoord.z * tcsTexCoord[2];
	
	vec3 position = gl_TessCoord.x * gl_in[0].gl_Position.xyz +
		gl_TessCoord.y * gl_in[1].gl_Position.xyz +
		gl_TessCoord.z * gl_in[2].gl_Position.xyz +
		texture(in_HeightMap, texCoord).r * N * 0.2;
		
		
	tesInverseTBN = invTBN;
	tesPosition = position;
	tesTexCoord = texCoord;
	
	gl_Position = in_ProjectionMatrix * vec4(position, 1.0);
		
}