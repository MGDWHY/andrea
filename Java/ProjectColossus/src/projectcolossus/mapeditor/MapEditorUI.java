/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package projectcolossus.mapeditor;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.KeyStroke;
import javax.swing.filechooser.FileFilter;
import projectcolossus.gamelogic.GameMap;
import projectcolossus.gamelogic.Planet;
import projectcolossus.gamelogic.Route;
import projectcolossus.gamelogic.Vec2f;

/**
 *
 * @author Andrea
 */
public class MapEditorUI extends javax.swing.JFrame {
    
    private static final int TOOL_PLANET = 0;
    private static final int TOOL_ROUTE = 1;
    
    private int selectedTool;
    
    private int planetIndex;
    
    private Planet selectedPlanet, draggedPlanet;   
    
    private GameMap gameMap;

    /**
     * Creates new form MapEditorUI
     */
    public MapEditorUI() {
        initComponents();


        
        FileFilter ff = new FileFilter() {
            @Override
            public boolean accept(File file) {
                if(file.isDirectory() || file.getName().endsWith(".pcm"))
                    return true;
                else
                    return false;
            }     

            @Override
            public String getDescription() {
                return "Project Colossus Game Map (.pcm)";
            }
        };
        
        fileChooser.setFileFilter(ff);
        
        newMap();
    }
    
    private void newMap() {
        
        gameMap = new GameMap(2);
               
        DefaultComboBoxModel model = new DefaultComboBoxModel<Integer>();
        
        for(int i = 0; i < gameMap.getPlayerNumber(); i++)
            model.addElement(i);
        
        cmoStartingPlanet.setModel(model);
        
        cmoStartingPlanet.setSelectedIndex(-1);

        editPanel.setGameMap(gameMap);
        editPanel.invalidate();
        editPanel.repaint();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngrpTools = new javax.swing.ButtonGroup();
        fileChooser = new javax.swing.JFileChooser();
        editPanel = new projectcolossus.mapeditor.MapPanel();
        javax.swing.JPanel jPanel1 = new javax.swing.JPanel();
        javax.swing.JLabel jLabel1 = new javax.swing.JLabel();
        cmoStartingPlanet = new javax.swing.JComboBox();
        javax.swing.JLabel jLabel2 = new javax.swing.JLabel();
        txtPlanetName = new javax.swing.JTextField();
        javax.swing.JLabel jLabel3 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuFileNew = new javax.swing.JMenuItem();
        mnuFileOpen = new javax.swing.JMenuItem();
        mnuFileSave = new javax.swing.JMenuItem();
        javax.swing.JPopupMenu.Separator jSeparator2 = new javax.swing.JPopupMenu.Separator();
        mnuFileExit = new javax.swing.JMenuItem();
        mnuEdit = new javax.swing.JMenu();
        mnuEditDeletePlanet = new javax.swing.JMenuItem();
        mnuEditDeleteRoutesToPlanet = new javax.swing.JMenuItem();
        javax.swing.JPopupMenu.Separator jSeparator1 = new javax.swing.JPopupMenu.Separator();
        mnuEditIncPlanetRadius = new javax.swing.JMenuItem();
        mnuEditDecPlanetRadius = new javax.swing.JMenuItem();
        mnuTools = new javax.swing.JMenu();
        mnuPlanetTool = new javax.swing.JRadioButtonMenuItem();
        mnuRouteTool = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        editPanel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                editPanelMouseReleased(evt);
            }
        });
        editPanel.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                editPanelMouseDragged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Planet properties");

        cmoStartingPlanet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmoStartingPlanetActionPerformed(evt);
            }
        });

        jLabel2.setText("Planet name");

        txtPlanetName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPlanetNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Starting planet for player");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmoStartingPlanet, 0, 49, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPlanetName)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtPlanetName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(cmoStartingPlanet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(371, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout editPanelLayout = new javax.swing.GroupLayout(editPanel);
        editPanel.setLayout(editPanelLayout);
        editPanelLayout.setHorizontalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editPanelLayout.createSequentialGroup()
                .addGap(0, 553, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        editPanelLayout.setVerticalGroup(
            editPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        mnuFile.setText("File");

        mnuFileNew.setText("New");
        mnuFileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileNewActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileNew);

        mnuFileOpen.setText("Open");
        mnuFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileOpenActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileOpen);

        mnuFileSave.setText("Save");
        mnuFileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileSaveActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileSave);
        mnuFile.add(jSeparator2);

        mnuFileExit.setText("Exit");
        mnuFile.add(mnuFileExit);

        menuBar.add(mnuFile);

        mnuEdit.setText("Edit");

        mnuEditDeletePlanet.setText("Delete Planet");
        mnuEditDeletePlanet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditDeletePlanetActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuEditDeletePlanet);

        mnuEditDeleteRoutesToPlanet.setText("Delete routes to planet");
        mnuEditDeleteRoutesToPlanet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditDeleteRoutesToPlanetActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuEditDeleteRoutesToPlanet);
        mnuEdit.add(jSeparator1);

        mnuEditIncPlanetRadius.setText("Increase planet radius");
        mnuEditIncPlanetRadius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditIncPlanetRadiusActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuEditIncPlanetRadius);
        mnuEditIncPlanetRadius.setAccelerator(KeyStroke.getKeyStroke('+'));

        mnuEditDecPlanetRadius.setText("Decrease planet radius");
        mnuEditDecPlanetRadius.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditDecPlanetRadiusActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuEditDecPlanetRadius);
        mnuEditDecPlanetRadius.setAccelerator(KeyStroke.getKeyStroke('-'));

        menuBar.add(mnuEdit);

        mnuTools.setText("Tools");

        btngrpTools.add(mnuPlanetTool);
        mnuPlanetTool.setSelected(true);
        mnuPlanetTool.setText("Planet");
        mnuPlanetTool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuPlanetToolActionPerformed(evt);
            }
        });
        mnuTools.add(mnuPlanetTool);

        btngrpTools.add(mnuRouteTool);
        mnuRouteTool.setText("Route");
        mnuRouteTool.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuRouteToolActionPerformed(evt);
            }
        });
        mnuTools.add(mnuRouteTool);

        menuBar.add(mnuTools);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuPlanetToolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuPlanetToolActionPerformed
        selectedTool = TOOL_PLANET;
    }//GEN-LAST:event_mnuPlanetToolActionPerformed

    private void mnuRouteToolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuRouteToolActionPerformed
        selectedTool = TOOL_ROUTE;
    }//GEN-LAST:event_mnuRouteToolActionPerformed

    private void editPanelMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editPanelMouseReleased
        // TODO add your handling code here:
        Vec2f clickPosition = new Vec2f(evt.getX(), evt.getY());
        
        Planet clickedPlanet = planetAt(clickPosition);
        
        draggedPlanet = null;

        switch(selectedTool) {
            case TOOL_PLANET:
                
                if(clickedPlanet != null) {
                    if(selectedPlanet == null)
                        selectedPlanet = clickedPlanet;
                    else {
                        if(selectedPlanet.equals(clickedPlanet))
                            selectedPlanet = null;
                        else
                            selectedPlanet = clickedPlanet;
                    }
                    break;
                } else {
                
                    gameMap.addPlanet(new Planet("Planet " + planetIndex++ , clickPosition));
                }
                break;
            case TOOL_ROUTE:
                if(clickedPlanet == null)
                    break;
              
                if(selectedPlanet == null) {
                    selectedPlanet = clickedPlanet;
                }    
                else {
                    if(!selectedPlanet.equals(clickedPlanet)) {
                        gameMap.addRoute(new Route(selectedPlanet, clickedPlanet));

                        selectedPlanet = null;
                    } else {
                        selectedPlanet = null;
                    }
                }
                
            default:
                break;
        }        
        
        editPanel.setHighlighPlanet(selectedPlanet);
        
        if(selectedPlanet != null) {
            txtPlanetName.setText(selectedPlanet.getName());
            
            cmoStartingPlanet.setSelectedIndex(-1);
            
            for(int i = 0; i < gameMap.getPlayerNumber(); i++) {
                if(gameMap.getPlayerStartingPlanet(i) != null &&
                    gameMap.getPlayerStartingPlanet(i).equals(selectedPlanet))
                    cmoStartingPlanet.setSelectedItem(i);
            }
            
        }

        editPanel.invalidate();
        editPanel.repaint();            
    }//GEN-LAST:event_editPanelMouseReleased

    private void editPanelMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_editPanelMouseDragged
        // TODO add your handling code here:
        Vec2f clickPosition = new Vec2f(evt.getX(), evt.getY());
        Planet clickedPlanet = planetAt(clickPosition);
        
        if(draggedPlanet == null)
            draggedPlanet = clickedPlanet;     

        if(draggedPlanet != null) {
            draggedPlanet.setPosition(clickPosition);

            editPanel.invalidate();
            editPanel.repaint();   
        }
    }//GEN-LAST:event_editPanelMouseDragged

    private void mnuEditDeletePlanetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEditDeletePlanetActionPerformed
        // TODO add your handling code here:
        if(selectedPlanet != null) {
           
            gameMap.removePlanet(selectedPlanet);
            
            selectedPlanet = null;

            editPanel.invalidate();
            editPanel.repaint();               
        }
    }//GEN-LAST:event_mnuEditDeletePlanetActionPerformed

    private void mnuEditIncPlanetRadiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEditIncPlanetRadiusActionPerformed
        // TODO add your handling code here:
        if(selectedPlanet != null) {
            selectedPlanet.setRadius(selectedPlanet.getRadius() + 1);

            editPanel.invalidate();
            editPanel.repaint();                 
        }
    }//GEN-LAST:event_mnuEditIncPlanetRadiusActionPerformed

    private void mnuEditDecPlanetRadiusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEditDecPlanetRadiusActionPerformed
        if(selectedPlanet != null) {
            selectedPlanet.setRadius(selectedPlanet.getRadius() - 1);

            editPanel.invalidate();
            editPanel.repaint();               
        }        // TODO add your handling code here:
    }//GEN-LAST:event_mnuEditDecPlanetRadiusActionPerformed

    private void mnuEditDeleteRoutesToPlanetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEditDeleteRoutesToPlanetActionPerformed
        // TODO add your handling code here:
        if(selectedPlanet != null) {
            gameMap.deleteRoutesToPlanet(selectedPlanet);
            
            editPanel.invalidate();
            editPanel.repaint();              
        }
    }//GEN-LAST:event_mnuEditDeleteRoutesToPlanetActionPerformed

    private void mnuFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileOpenActionPerformed
        // TODO add your handling code here:
        if(fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                ObjectInputStream in = new ObjectInputStream(new FileInputStream(fileChooser.getSelectedFile()));
                gameMap = (GameMap) in.readObject();
                editPanel.setGameMap(gameMap);
                editPanel.invalidate();
                editPanel.repaint();
                in.close();
            }
            catch(Exception ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_mnuFileOpenActionPerformed

    private void mnuFileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileSaveActionPerformed
        // TODO add your handling code here:
        if(fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            try {
                ObjectOutputStream out = new ObjectOutputStream(new FileOutputStream(fileChooser.getSelectedFile()));
                out.writeObject(gameMap);
                out.close();
            }
            catch(Exception ex) {
                ex.printStackTrace();
            }
        }        
    }//GEN-LAST:event_mnuFileSaveActionPerformed

    private void mnuFileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileNewActionPerformed
        // TODO add your handling code here:
        newMap();
    }//GEN-LAST:event_mnuFileNewActionPerformed

    private void cmoStartingPlanetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmoStartingPlanetActionPerformed
        // TODO add your handling code here:
        if(selectedPlanet != null) {
            Integer playerIndex = (Integer)cmoStartingPlanet.getSelectedItem();
            if(playerIndex != null)
                gameMap.setPlayerStartingPlanet(playerIndex, selectedPlanet);
        }
    }//GEN-LAST:event_cmoStartingPlanetActionPerformed

    private void txtPlanetNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPlanetNameActionPerformed
        // TODO add your handling code here:
        if(selectedPlanet != null) {
            selectedPlanet.setName(txtPlanetName.getText());
            
            editPanel.invalidate();
            editPanel.repaint();
            
        }
    }//GEN-LAST:event_txtPlanetNameActionPerformed
    
    private Planet planetAt(Vec2f position) {
        for(Planet p : gameMap.getPlanets()) {
            float distance = position.substract(p.getPosition()).length();
            if(distance < p.getRadius()) {
                return p;
            }
        }
        return null;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MapEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MapEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MapEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MapEditorUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MapEditorUI().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btngrpTools;
    private javax.swing.JComboBox cmoStartingPlanet;
    private projectcolossus.mapeditor.MapPanel editPanel;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenu mnuEdit;
    private javax.swing.JMenuItem mnuEditDecPlanetRadius;
    private javax.swing.JMenuItem mnuEditDeletePlanet;
    private javax.swing.JMenuItem mnuEditDeleteRoutesToPlanet;
    private javax.swing.JMenuItem mnuEditIncPlanetRadius;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFileExit;
    private javax.swing.JMenuItem mnuFileNew;
    private javax.swing.JMenuItem mnuFileOpen;
    private javax.swing.JMenuItem mnuFileSave;
    private javax.swing.JRadioButtonMenuItem mnuPlanetTool;
    private javax.swing.JRadioButtonMenuItem mnuRouteTool;
    private javax.swing.JMenu mnuTools;
    private javax.swing.JTextField txtPlanetName;
    // End of variables declaration//GEN-END:variables
}
